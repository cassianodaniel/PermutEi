{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\DathApp\\\\PermutEi\\\\PermutEi\\\\frontend\\\\src\\\\contexts\\\\LoggedContext.js\";\nimport React, { createContext, useState, useContext } from \"react\";\nconst LoggedContext = createContext();\nexport default function LoggedProvider({\n  children\n}) {\n  const [logados, setLogados] = useState(\"Inicial state\");\n  return /*#__PURE__*/React.createElement(LoggedContext.Provider, {\n    value: {\n      logados,\n      setLogados\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useLog() {\n  const context = useContext(LoggedContext);\n  if (!context) throw new Error(\"useCount must be used within a CountProvider\");\n  const {\n    logados,\n    setLogados\n  } = context;\n  return {\n    logados,\n    setLogados\n  };\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/DathApp/PermutEi/PermutEi/frontend/src/contexts/LoggedContext.js"],"names":["React","createContext","useState","useContext","LoggedContext","LoggedProvider","children","logados","setLogados","useLog","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;AAEA,MAAMC,aAAa,GAAGH,aAAa,EAAnC;AAEA,eAAe,SAASI,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAsC;AACnD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,eAAD,CAAtC;AACA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD;AAED,OAAO,SAASG,MAAT,GAAkB;AACvB,QAAMC,OAAO,GAAGP,UAAU,CAACC,aAAD,CAA1B;AACA,MAAI,CAACM,OAAL,EAAc,MAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACd,QAAM;AAAEJ,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BE,OAAhC;AACA,SAAO;AAAEH,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACD","sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\n\r\nconst LoggedContext = createContext();\r\n\r\nexport default function LoggedProvider({ children }) {\r\n  const [logados, setLogados] = useState(\"Inicial state\");\r\n  return (\r\n    <LoggedContext.Provider value={{ logados, setLogados }}>\r\n      {children}\r\n    </LoggedContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useLog() {\r\n  const context = useContext(LoggedContext);\r\n  if (!context) throw new Error(\"useCount must be used within a CountProvider\");\r\n  const { logados, setLogados } = context;\r\n  return { logados, setLogados };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}